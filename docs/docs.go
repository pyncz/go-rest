// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "pyncz",
            "url": "http://github.com/pyncz",
            "email": "pyncz.dev@google.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/ping": {
            "get": {
                "description": "Responses with 200 OK if service is available.",
                "tags": [
                    "Health"
                ],
                "summary": "health check",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/HttpError"
                        }
                    }
                }
            }
        },
        "/tasks": {
            "get": {
                "description": "Reads a paginated list of the tasks",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Task"
                ],
                "summary": "read tasks",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Pagination offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 12,
                        "description": "Pagination limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.PaginatedListResults-Task"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/HttpError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/HttpError"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new task from the provided form",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Task"
                ],
                "summary": "create task",
                "parameters": [
                    {
                        "description": "Creation form",
                        "name": "form",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TaskCreateForm"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/Task"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/HttpError"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/HttpError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/HttpError"
                        }
                    }
                }
            }
        },
        "/tasks/items": {
            "get": {
                "description": "Reads a paginated list of the task items",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Item"
                ],
                "summary": "read task items",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Pagination offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 12,
                        "description": "Pagination limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.PaginatedListResults-Item"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/HttpError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/HttpError"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new task item from the provided form",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Item"
                ],
                "summary": "create task item",
                "parameters": [
                    {
                        "description": "Creation form",
                        "name": "form",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ItemCreateForm"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/Item"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/HttpError"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/HttpError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/HttpError"
                        }
                    }
                }
            }
        },
        "/tasks/items/{id}": {
            "get": {
                "description": "Finds a task item by the provided ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Item"
                ],
                "summary": "get task item by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Item ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Item"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/HttpBadRequestError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/HttpError"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/HttpError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/HttpError"
                        }
                    }
                }
            }
        },
        "/tasks/tags": {
            "get": {
                "description": "Reads a paginated list of the tags",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tag"
                ],
                "summary": "read tags",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Pagination offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 12,
                        "description": "Pagination limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.PaginatedListResults-Tag"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/HttpError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/HttpError"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new tag from the provided form",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tag"
                ],
                "summary": "create tag",
                "parameters": [
                    {
                        "description": "Creation form",
                        "name": "form",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TagCreateForm"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/Tag"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/HttpError"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/HttpError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/HttpError"
                        }
                    }
                }
            }
        },
        "/tasks/tags/{slug}": {
            "get": {
                "description": "Finds a tag by the provided slug",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tag"
                ],
                "summary": "get tag by slug",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tag slug",
                        "name": "slug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Tag"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/HttpBadRequestError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/HttpError"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/HttpError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/HttpError"
                        }
                    }
                }
            }
        },
        "/tasks/{id}": {
            "get": {
                "description": "Finds a task by the provided ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Task"
                ],
                "summary": "get task by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Task"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/HttpBadRequestError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/HttpError"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/HttpError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/HttpError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "HttpBadRequestError": {
            "type": "object",
            "additionalProperties": {
                "type": "string"
            }
        },
        "HttpError": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "Item": {
            "description": "Item data",
            "type": "object",
            "required": [
                "estimation",
                "id",
                "task",
                "title"
            ],
            "properties": {
                "description": {
                    "description": "Description of the task item",
                    "type": "string",
                    "maxLength": 256
                },
                "estimation": {
                    "description": "Estimation points of the task item",
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                },
                "id": {
                    "description": "ID in the DB collection",
                    "type": "string"
                },
                "task": {
                    "description": "Related task's ID",
                    "type": "string"
                },
                "title": {
                    "description": "Title of the task item",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 3
                }
            }
        },
        "ItemCreateForm": {
            "description": "Task creation model",
            "type": "object",
            "required": [
                "estimation",
                "task",
                "title"
            ],
            "properties": {
                "description": {
                    "description": "Description of the task item",
                    "type": "string",
                    "maxLength": 256
                },
                "estimation": {
                    "description": "Estimation points of the task item",
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                },
                "task": {
                    "description": "Related task's ID",
                    "type": "string"
                },
                "title": {
                    "description": "Title of the task item",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 3
                }
            }
        },
        "Tag": {
            "description": "Tag data",
            "type": "object",
            "required": [
                "id",
                "name",
                "slug"
            ],
            "properties": {
                "id": {
                    "description": "ID in the DB collection",
                    "type": "string"
                },
                "name": {
                    "description": "Name of the tag",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 3
                },
                "slug": {
                    "description": "Slug of the tag",
                    "type": "string",
                    "maxLength": 32,
                    "minLength": 3
                }
            }
        },
        "TagCreateForm": {
            "type": "object",
            "required": [
                "name",
                "slug"
            ],
            "properties": {
                "name": {
                    "description": "Name of the tag",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 3
                },
                "slug": {
                    "description": "Slug of the tag",
                    "type": "string",
                    "maxLength": 32,
                    "minLength": 3
                }
            }
        },
        "Task": {
            "description": "Task data",
            "type": "object",
            "required": [
                "id",
                "title"
            ],
            "properties": {
                "completed": {
                    "description": "If the task is completed",
                    "type": "boolean"
                },
                "id": {
                    "description": "ID in the DB collection",
                    "type": "string"
                },
                "tags": {
                    "description": "Task's related tags' IDs",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "description": "Title of the task",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 3
                }
            }
        },
        "TaskCreateForm": {
            "description": "Task creation model",
            "type": "object",
            "required": [
                "title"
            ],
            "properties": {
                "completed": {
                    "description": "If the task is completed",
                    "type": "boolean"
                },
                "tags": {
                    "description": "Task's related tags' IDs",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "description": "Title of the task",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 3
                }
            }
        },
        "models.PaginatedListResults-Item": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "cursor": {
                    "type": "integer"
                },
                "limit": {
                    "type": "integer"
                },
                "offset": {
                    "type": "integer"
                },
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Item"
                    }
                }
            }
        },
        "models.PaginatedListResults-Tag": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "cursor": {
                    "type": "integer"
                },
                "limit": {
                    "type": "integer"
                },
                "offset": {
                    "type": "integer"
                },
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    }
                }
            }
        },
        "models.PaginatedListResults-Task": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "cursor": {
                    "type": "integer"
                },
                "limit": {
                    "type": "integer"
                },
                "offset": {
                    "type": "integer"
                },
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Task"
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Go Rest API docs",
	Description:      "API docs for my GO backend's sandbox",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
